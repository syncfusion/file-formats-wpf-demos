<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:listCollection="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:local="clr-namespace:syncfusion.demoscommon.wpf"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:skinManager="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf">

    <SolidColorBrush x:Key="ChromelessWindow.TitleBar.Button.Static.Glyph" Color="#000000" />
    <SolidColorBrush x:Key="ChromelessWindow.TitleBar.Button.MouseOver.Background" Color="#30ffffff" />
    <SolidColorBrush x:Key="Disabled.Foreground" Color="#000000" Opacity="0.38" />
    <local:BoolNegationConverter x:Key="BoolNegationConverter" />
    <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <syncfusion:TemplateToVisibilityConverter x:Key="dropDownTemplateConvertor" />
    <local:StringVisibilityConverter x:Key="StringVisibilityConverter" />

    <DrawingImage x:Key="MainWindowIcon">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="#ffffff" Geometry="M38.649015,47.214996 L54.85803,47.214996 54.85803,63.440021 38.649015,63.440021 z M19.310003,47.214996 L35.522028,47.214996 35.522028,63.440021 19.310003,63.440021 z M0.026000977,47.214996 L16.240011,47.214996 16.240011,63.440021 0.026000977,63.440021 z M38.623978,27.908966 L54.834018,27.908966 54.834018,44.138023 38.623978,44.138023 z M19.284006,27.908966 L35.493984,27.908966 35.493984,44.138023 19.284006,44.138023 z M0,27.908966 L16.212027,27.908966 16.212027,44.138023 0,44.138023 z M19.284006,8.6250228 L35.493984,8.6250228 35.493984,24.849987 19.284006,24.849987 z M0,8.6250228 L16.212027,8.6250228 16.212027,24.849987 0,24.849987 z M52.916042,0 L65.511017,10.699971 54.814053,23.292002 42.219017,12.592976 z" />
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="ProductWindowIcon">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="{Binding Path=TitleBarForeground, RelativeSource={RelativeSource AncestorType=syncfusion:ChromelessWindow}}" Geometry="M38.649015,47.214996 L54.85803,47.214996 54.85803,63.440021 38.649015,63.440021 z M19.310003,47.214996 L35.522028,47.214996 35.522028,63.440021 19.310003,63.440021 z M0.026000977,47.214996 L16.240011,47.214996 16.240011,63.440021 0.026000977,63.440021 z M38.623978,27.908966 L54.834018,27.908966 54.834018,44.138023 38.623978,44.138023 z M19.284006,27.908966 L35.493984,27.908966 35.493984,44.138023 19.284006,44.138023 z M0,27.908966 L16.212027,27.908966 16.212027,44.138023 0,44.138023 z M19.284006,8.6250228 L35.493984,8.6250228 35.493984,24.849987 19.284006,24.849987 z M0,8.6250228 L16.212027,8.6250228 16.212027,24.849987 0,24.849987 z M52.916042,0 L65.511017,10.699971 54.814053,23.292002 42.219017,12.592976 z" />
        </DrawingImage.Drawing>
    </DrawingImage>
    <Style TargetType="shared:TitleButton">
        <Setter Property="Height" Value="32" />
    </Style>

    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Default">
                <Setter Property="BorderBrush" Value="#FFE0E0E0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="MaterialLight">
                <Setter Property="BorderBrush" Value="#FFE0E0E0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="MaterialDark">
                <Setter Property="BorderBrush" Value="#373737" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="MaterialLightBlue">
                <Setter Property="BorderBrush" Value="#bdd7f1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="MaterialDarkBlue">
                <Setter Property="BorderBrush" Value="#32456d" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Office2019Colorful">
                <Setter Property="BorderBrush" Value="#d2d2d2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Office2019Black">
                <Setter Property="BorderBrush" Value="#595959" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Office2019White">
                <Setter Property="BorderBrush" Value="#D2D2D2" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Office2019DarkGray">
                <Setter Property="BorderBrush" Value="#ABACAB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Office2019HighContrast">
                <Setter Property="BorderBrush" Value="#979797" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Office2019HighContrastWhite">
                <Setter Property="BorderBrush" Value="#000000" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="SystemTheme">
                <Setter Property="BorderBrush" Value="{x:Static SystemColors.ControlDarkBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="FluentLight">
                <Setter Property="BorderBrush" Value="#33000000" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="FluentDark">
                <Setter Property="BorderBrush" Value="#33FFFFFF" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Windows11Light">
                <Setter Property="BorderBrush" Value="#29000000" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Windows11Dark">
                <Setter Property="BorderBrush" Value="#36FFFFFF" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Material3Light">
                <Setter Property="BorderBrush" Value="#29000000" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(skinManager:SfSkinManager.Theme).ThemeName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" Value="Material3Dark">
                <Setter Property="BorderBrush" Value="#36FFFFFF" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Style used for SubDemos ListViewItem-->
    <Style x:Key="SubDemoListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Margin" Value="0,2,8,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="itemContainer" 
                            BorderThickness="1"
                            Background="{DynamicResource SecondaryBackground}"
                            Style="{StaticResource BorderStyle}"
                            Margin="{TemplateBinding Margin}" 
                            CornerRadius="15">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Grid.Column="1" 
                                          Focusable="False"  
                                          TextBlock.Foreground="{DynamicResource SecondaryForeground}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                          
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="itemContainer" Property="Background" Value="{DynamicResource SecondaryBackgroundHovered}"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{DynamicResource SecondaryForegroundHovered}"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="itemContainer" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{DynamicResource PrimaryForeground}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="itemContainer" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{DynamicResource PrimaryForeground}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--Focusvisual style of Hyperlink-->
    <Style x:Key="HyperlinkFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="-6" BorderThickness="2" BorderBrush="Black" CornerRadius="8" >
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Focusvisual style of ListView item-->
    <Style x:Key="ListViewItemFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="2" BorderBrush="Black" CornerRadius="8" >
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Style of Hyperlink-->
    <Style x:Key="HyperlinkStyle" TargetType="{x:Type Hyperlink}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#0066FF"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource HyperlinkFocusVisualStyle}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
                <Setter Property="Foreground" Value="#0066FF"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
                <Setter Property="Foreground" Value="#0066FF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextDecorations" Value="None"/>
                <Setter Property="Foreground" Value="{StaticResource Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Focusvisual style of Navigate Button-->
    <Style x:Key="NavigateButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="#80000000" Width="32" Margin="-2" BorderThickness="1" CornerRadius="8">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="0" Color="#FFFFFF" Opacity="1" RenderingBias="Quality" Direction="0" />
                        </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Focusvisual style of ShowAll Button-->
    <Style x:Key="ShowAllFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Black" Margin="-1" MinHeight="24" MinWidth="66" BorderThickness="1" CornerRadius="11.5">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ShadowEffect of Showcase Demos-->
    <DropShadowEffect x:Key="ShowcaseDemosShadowEffect" 
                      Color="#0A60FF"
                      BlurRadius="3"
                      ShadowDepth="5"
                      Opacity="0.07"/>
    <!--Style of Listview of All Controls-->
    <Style x:Key="ListStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Style of Showcase product demos-->
    <Style x:Key="DemosListStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListStyle}">
        <Setter Property="Margin" Value="0,12,16,24"/>
    </Style>

    <Style x:Key="ShowCaseDemosListStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListStyle}">
        <Setter Property="Margin" Value="0,0,16,24"/>
    </Style>
    <!--Style of highlighted product demos-->
    <Style x:Key="ProductListStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListStyle}">
        <Setter Property="Margin" Value="8,1,8,1"/>
    </Style>
    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Background" Value="#80000000"/>
        <Setter Property="BorderBrush" Value="#80ffffff"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource NavigateButtonFocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Height="50"
                        Width="28"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="8"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter" 
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#61000000" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#616263"/>
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#616263"/>
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#80000000"/>
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ThemeComboTemplate" TargetType="{x:Type syncfusion:ComboBoxAdv}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                SnapsToDevicePixels="True"
                StaysOpen="False">
                <Border
                    x:Name="DropDownBorder"
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Effect="{DynamicResource Default.ShadowDepth3}"
                    Style="{StaticResource BorderStyle}">
                    <Border.Margin>
                        <Thickness>8,0,8,10</Thickness>
                    </Border.Margin>
                    <Grid>
                        <Grid Visibility="{TemplateBinding DropDownContentTemplate, Converter={StaticResource dropDownTemplateConvertor}, ConverterParameter='Item_Presenter'}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollViewer x:Name="DropDownScrollViewer" Background="{DynamicResource PopupBackground}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Canvas
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            x:Name="OpaqueRect"
                                            Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                            Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                            Fill="{Binding Background, ElementName=DropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        Grid.Row="1"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                        <ContentControl ContentTemplate="{TemplateBinding DropDownContentTemplate}" />
                    </Grid>
                </Border>
            </Popup>
            <Border
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" />
            <ToggleButton
                x:Name="PART_ToggleButton"
                Grid.ColumnSpan="2"
                Margin="0,0,3,0"
                HorizontalContentAlignment="Right"
                Background="Transparent"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Width="9.5"
                                Height="7"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ContentPresenter.Resources>
                                    <Style BasedOn="{x:Null}" TargetType="{x:Type TextBlock}" />
                                </ContentPresenter.Resources>
                                <ContentPresenter.Content>
                                    <Path
                                        Name="Arrow"
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=syncfusion:ComboBoxAdv}}"
                                        RenderTransformOrigin="0.5,0.5">
                                        <Path.Data>
                                            <PathGeometry>M 0 0 L 3.5 4 L 7 0 Z</PathGeometry>
                                        </Path.Data>
                                    </Path>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>

            <ContentPresenter
                x:Name="ContentPresenter"
                Margin="4,0,0,0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

            <ItemsControl
                x:Name="PART_SelectedItems"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                IsHitTestVisible="false"
                IsTabStop="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="MainWindowCloseButtonTemplate">
        <Border
            x:Name="closeborder"
            Width="32"
            Height="32"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="0"
            SnapsToDevicePixels="true">
            <Grid
                x:Name="grid"
                Width="16"
                Height="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                SnapsToDevicePixels="true">
                <Path
                    Name="pathButton"
                    Width="16"
                    Height="16"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M1.4139423,0L7.0029922,5.5845888 12.592018,0 14.006015,1.4149939 8.4180527,6.9985202 14.006,12.582007 12.591996,13.997001 7.0030056,8.4124444 1.4140122,13.997001 1.5026823E-05,12.582007 5.5879484,6.9985092 0,1.4149939z "
                    Fill="{StaticResource ChromelessWindow.TitleBar.Button.Static.Glyph}"
                    SnapsToDevicePixels="True"
                    Stretch="Fill" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="closeborder" Property="IsMouseOver" Value="True">
                <Setter TargetName="closeborder" Property="Background" Value="{StaticResource ChromelessWindow.TitleBar.Button.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="MinHeight" Value="32" />
                <Setter Property="MinWidth" Value="32" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="MainWindowMinimizeButtonTemplate">
        <Border
            x:Name="minimizeborder"
            Width="32"
            Height="32"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="0"
            SnapsToDevicePixels="true">
            <Grid
                x:Name="grid"
                Width="16"
                Height="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                SnapsToDevicePixels="true">
                <Path
                    Name="pathButton"
                    Width="16"
                    Height="2.3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0L14,0 14,1.9999999 0,1.9999999z"
                    Fill="{StaticResource ChromelessWindow.TitleBar.Button.Static.Glyph}"
                    SnapsToDevicePixels="True"
                    Stretch="Fill" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="minimizeborder" Property="IsMouseOver" Value="True">
                <Setter TargetName="minimizeborder" Property="Background" Value="{StaticResource ChromelessWindow.TitleBar.Button.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="MinHeight" Value="32" />
                <Setter Property="MinWidth" Value="32" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Style of ShowAll Button-->
    <Style x:Key="ShowAllButtonTemplate" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ShowAllFocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Height="23"
                            Width="65"
                            Grid.Column="1"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="Right"
                            CornerRadius="11.5"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#D7D7D7" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="#D7D7D7"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="#000000"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="#272727"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Black"/>
                            <Setter Property="Foreground" Value="White"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--style of Galleryview and listview Button-->
    <Style x:Key="AllControlsButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisualStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="bd"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="Right"
                            CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#D7D7D7" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="#D7D7D7"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#D7E6FF"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#D7E6FF"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ProductsWindowMaximizeButtonTemplate" TargetType="{x:Type syncfusion:TitleButton}">
        <Border
            x:Name="maxborder"
            MinWidth="30"
            MinHeight="30"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="0"
            SnapsToDevicePixels="true">
            <Path
                    Name="pathButton"
                    Width="12"
                    Height="12"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0.5 4C0.5 2.067 2.067 0.5 4 0.5H8C9.933 0.5 11.5 2.067 11.5 4V8C11.5 9.933 9.933 11.5 8 11.5H4C2.067 11.5 0.5 9.933 0.5 8V4Z"
                    SnapsToDevicePixels="True"
                    Stretch="Fill"
                    Stroke="{Binding Path=TitleBarForeground, RelativeSource={RelativeSource AncestorType=syncfusion:ChromelessWindow}}"
                    StrokeThickness="1" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="maxborder" Property="IsMouseOver" Value="True">
                <Setter TargetName="maxborder" Property="Background" Value="{StaticResource ChromelessWindow.TitleBar.Button.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="MinWidth" Value="30" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ProductsWindowCloseButtonTemplate">
        <Border
            x:Name="closeborder"
            Width="30"
            Height="30"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="0"
            SnapsToDevicePixels="true">
            <Path
                    Name="pathButton"
                    Width="9"
                    Height="9"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M12 4L4 12M4 4L12 12" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round"
                    Stroke="{Binding Path=TitleBarForeground, RelativeSource={RelativeSource AncestorType=syncfusion:ChromelessWindow}}"
                    SnapsToDevicePixels="True"
                    Stretch="Fill" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="closeborder" Property="IsMouseOver" Value="True">
                <Setter TargetName="closeborder" Property="Background" Value="{StaticResource ChromelessWindow.TitleBar.Button.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="MinWidth" Value="30" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ThemeButton">
        <Border x:Name="ThemeButtonBorder"
                Padding="{TemplateBinding Padding}"
                CornerRadius="4"
                Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1AFFFFFF" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#33FFFFFF"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#33FFFFFF"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="ProductsWindowMinimizeButtonTemplate">
        <Border
            x:Name="minimizeborder"
            Width="30"
            Height="30"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="0"
            SnapsToDevicePixels="true">
            <Grid
                x:Name="grid"
                Width="16"
                Height="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                SnapsToDevicePixels="true">
                <Path
                    Name="pathButton"
                    Width="11"
                    Height="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M3 8H13"
                    StrokeEndLineCap="Round" StrokeStartLineCap="Round"
                    Stroke="{Binding Path=TitleBarForeground, RelativeSource={RelativeSource AncestorType=syncfusion:ChromelessWindow}}"
                    SnapsToDevicePixels="True"
                    Stretch="Fill" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="minimizeborder" Property="IsMouseOver" Value="True">
                <Setter TargetName="minimizeborder" Property="Background" Value="{StaticResource ChromelessWindow.TitleBar.Button.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="MinWidth" Value="30" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ProductsWindowRestoreButtonTemplate">
        <Border
            x:Name="restoreborder"
            Width="30"
            Height="30"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="0"
            SnapsToDevicePixels="true">
            <Path
                    Name="pathButton"
                    Width="13"
                    Height="13"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M4 0C3.72386 0 3.5 0.223858 3.5 0.5C3.5 0.776142 3.72386 1 4 1H10C11.1046 1 12 1.89543 12 3V9C12 9.27614 12.2239 9.5 12.5 9.5C12.7761 9.5 13 9.27614 13 9V3C13 1.34315 11.6569 0 10 0H4ZM2.5 3H8.5C9.32843 3 10 3.67157 10 4.5V10.5C10 11.3284 9.32843 12 8.5 12H2.5C1.67157 12 1 11.3284 1 10.5V4.5C1 3.67157 1.67157 3 2.5 3ZM0 4.5C0 3.11929 1.11929 2 2.5 2H8.5C9.88071 2 11 3.11929 11 4.5V10.5C11 11.8807 9.88071 13 8.5 13H2.5C1.11929 13 0 11.8807 0 10.5V4.5Z"
                    Fill="{Binding Path=TitleBarForeground, RelativeSource={RelativeSource AncestorType=syncfusion:ChromelessWindow}}"
                    SnapsToDevicePixels="True"
                    Stretch="Fill" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="restoreborder" Property="IsMouseOver" Value="True">
                <Setter TargetName="restoreborder" Property="Background" Value="{StaticResource ChromelessWindow.TitleBar.Button.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="MinWidth" Value="30" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>