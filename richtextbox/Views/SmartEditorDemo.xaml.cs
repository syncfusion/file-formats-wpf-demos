#region Copyright Syncfusion® Inc. 2001-2025.
// Copyright Syncfusion® Inc. 2001-2025. All rights reserved.
// Use of this code is subject to the terms of our license.
// A copy of the current license can be obtained at any time by e-mailing
// licensing@syncfusion.com. Any infringement will be prosecuted under
// applicable laws. 
#endregion
using syncfusion.demoscommon.wpf;
using syncfusion.richtextboxdemos.wpf.Helper;
using syncfusion.richtextboxdemos.wpf.Views;
using Syncfusion.SfSkinManager;
using Syncfusion.Windows.Controls.RichTextBoxAdv;
using Syncfusion.Windows.Shared;
using Syncfusion.Windows.Tools.Controls;
using System;
using System.ComponentModel;
using System.IO;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;

namespace syncfusion.richtextboxdemos.wpf
{
    /// <summary>
    /// Interaction logic for SmartEditorDemo.xaml
    /// </summary>
    public partial class SmartEditorDemo : RibbonWindow
    {
        #region Fields
        // Fields to track custom menu items
        private MenuItem rewriteMenuItem;
        private MenuItem grammarMenuItem;
        private MenuItem translateMenuItem;
        private bool IsCredentialValid = false;
        Theme currentTheme = null;
        SemanticKernelAI semanticKernelOpenAI { get; set; }
        #endregion

        #region Constructor
        public SmartEditorDemo()
        {
            InitializeComponent();
            richTextBoxAdv.Load(@"Assets\documenteditor\GettingStarted.docx");
            richTextBoxAdv.DocumentTitle = "Getting Started";
            richTextBoxAdv.RequestNavigate += RichTextBoxAdv_RequestNavigate;
            richTextBoxAdv.SelectionChanged += RichTextBoxAdv_SelectionChanged;
            this.Loaded += OnLoaded;
        }
        #endregion

        #region Implementation
        /// <summary>
        /// Launches the URI.
        /// </summary>
        /// <param name="uri">The URI.</param>
        private void LaunchUri(string navigationLink)
        {
            System.Diagnostics.Process process = new System.Diagnostics.Process();
            process.StartInfo = new System.Diagnostics.ProcessStartInfo(navigationLink) { UseShellExecute = true };
            process.Start();
        }
        /// <summary>
        /// Launches the Help URI
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">An <see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see> that contains the event data.</param>
        /// <remarks></remarks>
        void HelpButton_Click(object sender, RoutedEventArgs e)
        {
            LaunchUri(new Uri("http://help.syncfusion.com/wpf/sfrichtextboxadv/overview").AbsoluteUri);
        }
        #endregion

        #region Smart Editor Implementation
        /// <summary>
        /// Adds custom context menu items (Rewrite, Grammar, and Translate) to the SfRichTextBoxAdv context menu.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">Event data for the ContextMenuEventArgs.</param>
        private void RichTextBoxAdv_ContextMenuOpening(object sender, ContextMenuEventArgs e)
        {
            currentTheme = SfSkinManager.GetTheme(this);
            if (!richTextBoxAdv.Selection.IsEmpty && IsCredentialValid)
            {
                // Check if the Rewrite menu item exists, and if not, create and add it
                if (rewriteMenuItem == null)
                {
                    rewriteMenuItem = new MenuItem();
                    rewriteMenuItem.Header = "Rewrite";
                    rewriteMenuItem.Margin = new Thickness(4);
                    rewriteMenuItem.Click += RewriteMenuItem_Click;
                    if (currentTheme.ThemeName.ToLower().Contains("windows11"))
                    {
                        rewriteMenuItem.Icon = CreateMenuItemIcon("M1 2C1 1.44772 1.44772 1 2 1H12C12.5523 1 13 1.44772 13 2V6.5C13 6.77614 13.2239 7 13.5 7C13.7761 7 14 6.77614 14 6.5V2C14 0.89543 13.1046 0 12 0H2C0.89543 0 0 0.895431 0 2V9.5C0 9.77614 0.223858 10 0.5 10C0.776142 10 1 9.77614 1 9.5V2ZM3 3.5C3 3.22386 3.22386 3 3.5 3H10.5C10.7761 3 11 3.22386 11 3.5C11 3.77614 10.7761 4 10.5 4H3.5C3.22386 4 3 3.77614 3 3.5ZM3 6.5C3 6.22386 3.22386 6 3.5 6H7.5C7.77614 6 8 6.22386 8 6.5C8 6.77614 7.77614 7 7.5 7H3.5C3.22386 7 3 6.77614 3 6.5ZM3.51359 10.0002C3.76636 10.0065 3.98167 10.1857 4.03376 10.4331L4.12642 10.8732C4.27697 11.5883 4.82256 12.1548 5.53154 12.332L6.08684 12.4708C6.32065 12.5293 6.48838 12.7342 6.49943 12.975C6.51048 13.2157 6.36222 13.4352 6.13474 13.5148L5.35948 13.7862C4.74408 14.0016 4.28116 14.5161 4.13182 15.1508L4.03096 15.5795C3.97426 15.8204 3.76242 15.993 3.51499 15.9998C3.26755 16.0066 3.04656 15.8459 2.97671 15.6085L2.81358 15.0538C2.64319 14.4744 2.20872 14.0099 1.64205 13.8011L0.856891 13.5118C0.633456 13.4295 0.489242 13.2118 0.500629 12.9739C0.512016 12.7361 0.676372 12.5331 0.906649 12.4725L1.46514 12.3255C2.13066 12.1504 2.65041 11.6307 2.82554 10.9651L2.97251 10.4066C3.03685 10.1621 3.26082 9.99387 3.51359 10.0002ZM3.48672 12.1265C3.24529 12.4939 2.92554 12.8044 2.55045 13.0351C2.92497 13.2647 3.24362 13.5735 3.48466 13.938C3.72511 13.573 4.04353 13.2633 4.41848 13.0327C4.04498 12.802 3.72693 12.4922 3.48672 12.1265ZM12.2393 8.39699C12.1915 8.17019 11.9942 8.00593 11.7625 8.00016C11.5307 7.99438 11.3254 8.14861 11.2665 8.37276L11.1317 8.88471C10.9712 9.49476 10.4948 9.97121 9.88471 10.1317L9.37276 10.2665C9.16167 10.322 9.01101 10.5081 9.00058 10.7261C8.99014 10.9441 9.12233 11.1437 9.32715 11.2192L10.0469 11.4843C10.5663 11.6757 10.9646 12.1016 11.1208 12.6327L11.2703 13.1411C11.3343 13.3588 11.5369 13.506 11.7637 13.4998C11.9906 13.4936 12.1847 13.3354 12.2367 13.1145L12.3292 12.7216C12.4661 12.1398 12.8904 11.6681 13.4545 11.4707L14.1652 11.2219C14.3737 11.1489 14.5096 10.9478 14.4995 10.7271C14.4893 10.5064 14.3356 10.3185 14.1213 10.2649L13.6122 10.1377C12.9623 9.9752 12.4622 9.45598 12.3242 8.80045L12.2393 8.39699ZM10.8796 10.7821C11.2234 10.5707 11.5165 10.2861 11.7378 9.94927C11.958 10.2845 12.2496 10.5685 12.5919 10.7799C12.2482 10.9913 11.9564 11.2753 11.7359 11.6099C11.515 11.2757 11.2229 10.9927 10.8796 10.7821Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("material3"))
                    {
                        rewriteMenuItem.Icon = CreateMenuItemIcon("M1.99996 3C1.99996 1.89543 2.89539 1 3.99996 1H20C21.1045 1 22 1.89543 22 3V9H20V3L3.99996 3V12H1.99996V3ZM17 7H6.99996V5H17V7ZM6.99996 11H13V9H6.99996V11ZM6.74996 11.5628L7.58817 13.3588L8.39432 15.0861C8.5011 15.3149 8.68502 15.4989 8.91382 15.6056L10.6412 16.4118L12.4372 17.25L10.6412 18.0882L8.91383 18.8944C8.68502 19.0011 8.5011 19.1851 8.39432 19.4139L7.58817 21.1412L6.74996 22.9372L5.91176 21.1412L5.10561 19.4139C4.99882 19.1851 4.81491 19.0011 4.5861 18.8944L2.85877 18.0882L1.06274 17.25L2.85877 16.4118L4.5861 15.6056C4.81491 15.4989 4.99882 15.3149 5.10561 15.0861L5.91176 13.3588L6.74996 11.5628ZM6.74996 15.935C6.46638 16.5047 6.00466 16.9664 5.43498 17.25C6.00466 17.5336 6.46638 17.9953 6.74996 18.565C7.03354 17.9953 7.49527 17.5336 8.06495 17.25C7.49527 16.9664 7.03354 16.5047 6.74996 15.935ZM19.0882 11.6088L18.25 9.81278L17.4118 11.6088L16.9238 12.6543C16.817 12.8831 16.6331 13.0671 16.4043 13.1738L15.3588 13.6618L13.5627 14.5L15.3588 15.3382L16.4043 15.8262C16.6331 15.9329 16.817 16.1169 16.9238 16.3457L17.4118 17.3912L18.25 19.1872L19.0882 17.3912L19.5761 16.3457C19.6829 16.1169 19.8668 15.9329 20.0956 15.8262L21.1412 15.3382L22.9372 14.5L21.1412 13.6618L20.0956 13.1738C19.8668 13.0671 19.6829 12.8831 19.5761 12.6543L19.0882 11.6088ZM17.7564 14.5C17.94 14.3558 18.1057 14.1901 18.25 14.0064C18.3942 14.1901 18.5599 14.3558 18.7435 14.5C18.5599 14.6442 18.3942 14.8099 18.25 14.9936C18.1057 14.8099 17.94 14.6442 17.7564 14.5Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("fluent"))
                    {
                        rewriteMenuItem.Icon = CreateMenuItemIcon("M2 1.5C2 1.22386 2.22386 1 2.5 1H13.5C13.7761 1 14 1.22386 14 1.5V6.5C14 6.77614 14.2239 7 14.5 7C14.7761 7 15 6.77614 15 6.5V1.5C15 0.671573 14.3284 0 13.5 0H2.5C1.67157 0 1 0.671573 1 1.5V9.5C1 9.77614 1.22386 10 1.5 10C1.77614 10 2 9.77614 2 9.5V1.5ZM4 3.5C4 3.22386 4.22386 3 4.5 3H11.5C11.7761 3 12 3.22386 12 3.5C12 3.77614 11.7761 4 11.5 4H4.5C4.22386 4 4 3.77614 4 3.5ZM4 6.5C4 6.22386 4.22386 6 4.5 6H8.5C8.77614 6 9 6.22386 9 6.5C9 6.77614 8.77614 7 8.5 7H4.5C4.22386 7 4 6.77614 4 6.5ZM4.51359 10.0002C4.76636 10.0065 4.98167 10.1857 5.03376 10.4331L5.12642 10.8732C5.27697 11.5883 5.82256 12.1548 6.53154 12.332L7.08684 12.4708C7.32064 12.5293 7.48838 12.7342 7.49943 12.975C7.51047 13.2157 7.36221 13.4352 7.13474 13.5148L6.35948 13.7862C5.74408 14.0016 5.28116 14.5161 5.13182 15.1508L5.03096 15.5795C4.97426 15.8204 4.76242 15.993 4.51499 15.9998C4.26755 16.0066 4.04656 15.8459 3.97671 15.6084L3.81358 15.0538C3.64319 14.4744 3.20872 14.0099 2.64205 13.8011L1.85689 13.5118C1.63346 13.4295 1.48924 13.2118 1.50063 12.9739C1.51202 12.7361 1.67637 12.5331 1.90665 12.4725L2.46514 12.3255C3.13066 12.1504 3.65041 11.6307 3.82554 10.9651L3.97251 10.4066C4.03685 10.1621 4.26082 9.99387 4.51359 10.0002ZM4.48672 12.1265C4.24529 12.4939 3.92554 12.8044 3.55045 13.0351C3.92497 13.2647 4.24362 13.5735 4.48466 13.938C4.72511 13.573 5.04353 13.2633 5.41848 13.0327C5.04498 12.802 4.72693 12.4922 4.48672 12.1265ZM13.2393 8.39699C13.1915 8.17019 12.9942 8.00593 12.7625 8.00016C12.5307 7.99438 12.3254 8.14861 12.2665 8.37276L12.1317 8.88471C11.9712 9.49476 11.4948 9.97121 10.8847 10.1317L10.3728 10.2665C10.1617 10.322 10.011 10.5081 10.0006 10.7261C9.99014 10.9441 10.1223 11.1437 10.3271 11.2192L11.0469 11.4843C11.5663 11.6757 11.9646 12.1016 12.1208 12.6327L12.2703 13.1411C12.3343 13.3588 12.5369 13.506 12.7637 13.4998C12.9906 13.4936 13.1847 13.3354 13.2367 13.1145L13.3292 12.7216C13.4661 12.1398 13.8904 11.6681 14.4545 11.4707L15.1652 11.2219C15.3737 11.1489 15.5096 10.9478 15.4995 10.7271C15.4893 10.5064 15.3356 10.3185 15.1213 10.2649L14.6122 10.1377C13.9623 9.9752 13.4622 9.45598 13.3242 8.80045L13.2393 8.39699ZM11.8796 10.7821C12.2234 10.5707 12.5165 10.2861 12.7378 9.94927C12.958 10.2845 13.2496 10.5685 13.5919 10.7799C13.2482 10.9913 12.9564 11.2753 12.7359 11.6099C12.515 11.2757 12.2229 10.9927 11.8796 10.7821Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("material"))
                    {
                        rewriteMenuItem.Icon = CreateMenuItemIcon("M1.99999 1H2.99999H21H22V2V9H20V3H3.99999V12H1.99999V2V1ZM17 7H6.99999V5H17V7ZM6.99999 11H13V9H6.99999V11ZM18.25 9.81278L19.0882 11.6088L19.5762 12.6543C19.6829 12.8831 19.8669 13.0671 20.0957 13.1738L21.1412 13.6618L22.9372 14.5L21.1412 15.3382L20.0957 15.8262C19.8669 15.9329 19.6829 16.1169 19.5762 16.3457L19.0882 17.3912L18.25 19.1872L17.4118 17.3912L16.9238 16.3457C16.8171 16.1169 16.6331 15.9329 16.4043 15.8262L15.3588 15.3382L13.5628 14.5L15.3588 13.6618L16.4043 13.1738C16.6331 13.0671 16.8171 12.8831 16.9238 12.6543L17.4118 11.6088L18.25 9.81278ZM18.25 14.0064C18.1058 14.1901 17.9401 14.3558 17.7564 14.5C17.9401 14.6442 18.1058 14.8099 18.25 14.9936C18.3942 14.8099 18.5599 14.6442 18.7435 14.5C18.5599 14.3558 18.3942 14.1901 18.25 14.0064ZM7.5882 13.3588L6.74999 11.5628L5.91179 13.3588L5.10564 15.0861C4.99885 15.3149 4.81494 15.4989 4.58613 15.6056L2.8588 16.4118L1.06277 17.25L2.8588 18.0882L4.58613 18.8944C4.81494 19.0011 4.99885 19.1851 5.10564 19.4139L5.91179 21.1412L6.74999 22.9372L7.5882 21.1412L8.39435 19.4139C8.50113 19.1851 8.68505 19.0011 8.91386 18.8944L10.6412 18.0882L12.4372 17.25L10.6412 16.4118L8.91385 15.6056C8.68505 15.4989 8.50113 15.3149 8.39435 15.0861L7.5882 13.3588ZM5.43501 17.25C6.00469 16.9664 6.46641 16.5047 6.74999 15.935C7.03358 16.5047 7.4953 16.9664 8.06498 17.25C7.4953 17.5336 7.03357 17.9953 6.74999 18.565C6.46641 17.9953 6.00469 17.5336 5.43501 17.25Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("office") || currentTheme.ThemeName.ToLower().Contains("system"))
                    {
                        rewriteMenuItem.Icon = CreateMenuItemIcon("M1.5 0H1V0.5V9.5V10H2V9.5V1H14V6.5V7H15V6.5V0.5V0H14.5H1.5ZM4 3H4.5H11.5H12V4H11.5H4.5H4V3ZM4 6H4.5H8.5H9V7H8.5H4.5H4V6ZM5.20309 9.53854L4.75 8.56772L4.29691 9.53854L4.11651 9.9251C3.76884 10.67 3.17005 11.2688 2.4251 11.6165L2.03854 11.7969L1.06772 12.25L2.03854 12.7031L2.4251 12.8835C3.17005 13.2312 3.76884 13.83 4.11651 14.5749L4.29691 14.9615L4.75 15.9323L5.20309 14.9615L5.38349 14.5749C5.73116 13.83 6.32995 13.2312 7.0749 12.8835L7.46146 12.7031L8.43228 12.25L7.46146 11.7969L7.0749 11.6165C6.32995 11.2688 5.73116 10.67 5.38349 9.9251L5.20309 9.53854ZM3.34728 12.25C3.91331 11.8926 4.39264 11.4133 4.75 10.8473C5.10736 11.4133 5.58669 11.8926 6.15272 12.25C5.58669 12.6074 5.10736 13.0867 4.75 13.6527C4.39263 13.0867 3.91331 12.6074 3.34728 12.25ZM11.75 6.56772L12.2031 7.53854L12.2244 7.5842C12.5721 8.32915 13.1709 8.92794 13.9158 9.27561L13.9615 9.29692L14.9323 9.75L13.9615 10.2031L13.9158 10.2244C13.1709 10.5721 12.5721 11.1709 12.2244 11.9158L12.2031 11.9615L11.75 12.9323L11.2969 11.9615L11.2756 11.9158C10.9279 11.1709 10.3291 10.5721 9.5842 10.2244L9.53854 10.2031L8.56772 9.75L9.53854 9.29692L9.5842 9.27561C10.3291 8.92794 10.9279 8.32915 11.2756 7.5842L11.2969 7.53854L11.75 6.56772ZM11.75 8.74159C11.4696 9.12916 11.1292 9.46962 10.7416 9.75C11.1292 10.0304 11.4696 10.3708 11.75 10.7584C12.0304 10.3708 12.3708 10.0304 12.7584 9.75C12.3708 9.46962 12.0304 9.12916 11.75 8.74159Z");
                    }
                    richTextBoxAdv.ContextMenu.Items.Add(rewriteMenuItem);
                }

                // Check if the Grammar menu item exists, and if not, create and add it
                if (grammarMenuItem == null)
                {
                    grammarMenuItem = new MenuItem();
                    grammarMenuItem.Header = "Grammar";
                    grammarMenuItem.Click += GrammarMenuItem_Click;
                    grammarMenuItem.Margin = new Thickness(4);
                    if (currentTheme.ThemeName.ToLower().Contains("windows11"))
                    {
                        grammarMenuItem.Icon = CreateMenuItemIcon("M8.19226 1.71154C8.07581 1.43205 7.80273 1.25 7.49995 1.25C7.19718 1.25 6.9241 1.43205 6.80764 1.71154L4.30764 7.71154L3.47431 9.71154L1.80764 13.7115C1.64833 14.0939 1.82914 14.533 2.21149 14.6923C2.59384 14.8516 3.03295 14.6708 3.19226 14.2885L4.66662 10.75H10.1893L11.438 9.5013L10.6923 7.71154L8.19226 1.71154ZM9.30764 8.28846L9.70828 9.25H5.29162L5.69226 8.28846L7.49995 3.95L9.30764 8.28846ZM13.8304 11.3304C14.1233 11.0375 14.1233 10.5626 13.8304 10.2697C13.5375 9.97683 13.0626 9.97683 12.7697 10.2697L9.80005 13.2394L8.83038 12.2697C8.53749 11.9768 8.06261 11.9768 7.76972 12.2697C7.47683 12.5626 7.47683 13.0375 7.76972 13.3304L9.26972 14.8304C9.56261 15.1233 10.0375 15.1233 10.3304 14.8304L13.8304 11.3304Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("material3"))
                    {
                        grammarMenuItem.Icon = CreateMenuItemIcon("M3.09656 19H5.89201L7.49058 14.3806H14.3104L14.8482 15.9375L16.8715 13.9142L12.4204 1.54541H9.37781L3.09656 19ZM10.9716 4.71586H10.8352L8.25743 12.1647H13.5449L10.9716 4.71586ZM14.7071 21.7071L22.2071 14.2071L20.7929 12.7929L14 19.5858L11.2071 16.7929L9.79289 18.2071L13.2929 21.7071L14 22.4142L14.7071 21.7071Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("fluent"))
                    {
                        grammarMenuItem.Icon = CreateMenuItemIcon("M8.19226 1.71154C8.07581 1.43205 7.80273 1.25 7.49995 1.25C7.19718 1.25 6.9241 1.43205 6.80764 1.71154L4.30764 7.71154L3.47431 9.71154L1.80764 13.7115C1.64833 14.0939 1.82914 14.533 2.21149 14.6923C2.59384 14.8516 3.03295 14.6708 3.19226 14.2885L4.66662 10.75H10.1893L11.438 9.5013L10.6923 7.71154L8.19226 1.71154ZM9.30764 8.28846L9.70828 9.25H5.29162L5.69226 8.28846L7.49995 3.95L9.30764 8.28846ZM13.8304 11.3304C14.1233 11.0375 14.1233 10.5626 13.8304 10.2697C13.5375 9.97683 13.0626 9.97683 12.7697 10.2697L9.80005 13.2394L8.83038 12.2697C8.53749 11.9768 8.06261 11.9768 7.76972 12.2697C7.47683 12.5626 7.47683 13.0375 7.76972 13.3304L9.26972 14.8304C9.56261 15.1233 10.0375 15.1233 10.3304 14.8304L13.8304 11.3304Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("material"))
                    {
                        grammarMenuItem.Icon = CreateMenuItemIcon("M3.09656 19H5.89201L7.49058 14.3806H14.3104L14.8482 15.9375L16.8715 13.9142L12.4204 1.54541H9.37781L3.09656 19ZM10.9716 4.71586H10.8352L8.25743 12.1647H13.5449L10.9716 4.71586ZM14.7071 21.7071L22.2071 14.2071L20.7929 12.7929L14 19.5858L11.2071 16.7929L9.79289 18.2071L13.2929 21.7071L14 22.4142L14.7071 21.7071Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("office") || currentTheme.ThemeName.ToLower().Contains("system"))
                    {
                        grammarMenuItem.Icon = CreateMenuItemIcon("M8.37687 2.15462C8.05209 1.37514 6.94781 1.37514 6.62303 2.15462L4.30764 7.71155L3.47431 9.71155L1.80764 13.7115L1.51918 14.4039L2.9038 14.9808L3.19226 14.2885L4.66662 10.75H10.1893L11.438 9.50131L10.6923 7.71155L8.37687 2.15462ZM9.30764 8.28847L9.70828 9.25001H5.29162L5.69226 8.28847L7.49995 3.95001L9.30764 8.28847ZM13.8304 11.3304L14.3607 10.8L13.3 9.73939L12.7697 10.2697L9.80005 13.2394L8.83038 12.2697L8.30005 11.7394L7.23939 12.8L7.76972 13.3304L9.26972 14.8304L9.80005 15.3607L10.3304 14.8304L13.8304 11.3304Z");
                    }
                    richTextBoxAdv.ContextMenu.Items.Add(grammarMenuItem);
                }

                // Check if the Translate menu item exists, and if not, create and add it
                if (translateMenuItem == null)
                {
                    translateMenuItem = new MenuItem();
                    translateMenuItem.Header = "Translate";
                    translateMenuItem.Click += TranslateMenuItem_Click;
                    translateMenuItem.Margin = new Thickness(4);
                    if (currentTheme.ThemeName.ToLower().Contains("windows11"))
                    {
                        translateMenuItem.Icon = CreateMenuItemIcon("M14.5001 0C14.7763 0 15.0001 0.223858 15.0001 0.5V3.5C15.0001 3.77614 14.7763 4 14.5001 4H11.5001C11.224 4 11.0001 3.77614 11.0001 3.5C11.0001 3.22386 11.224 3 11.5001 3H13.5107L13.4975 2.98415C13.1309 2.54633 12.6948 2.1274 12.3032 1.95957C11.8885 1.78186 11.2482 1.76801 10.643 1.82475C10.3533 1.85191 10.0941 1.89279 9.90739 1.92694C9.81431 1.94397 9.73994 1.95919 9.68961 1.96997C9.66446 1.97536 9.64537 1.97963 9.63299 1.98245L9.61958 1.98554L9.61683 1.98619C9.34835 2.05053 9.07834 1.88514 9.01392 1.61667C8.94948 1.34816 9.11492 1.07824 9.38344 1.0138L9.50011 1.5C9.38344 1.0138 9.38447 1.01356 9.38447 1.01356L9.3862 1.01315L9.39175 1.01184L9.41096 1.00741C9.42728 1.00369 9.45056 0.998497 9.4801 0.992168C9.53915 0.979516 9.62344 0.962289 9.72747 0.94326C9.93498 0.905306 10.2239 0.859652 10.5496 0.829118C11.0498 0.782235 11.6996 0.763988 12.2785 0.903602C12.4236 0.938607 12.5643 0.983537 12.6971 1.04043C13.189 1.25124 13.6437 1.65727 14.0001 2.04189V0.5C14.0001 0.359626 14.058 0.232763 14.1511 0.141948C14.2412 0.0541133 14.3643 0 14.5001 0Z",
                            "M1 2.5C1 2.22386 1.22386 2 1.5 2H3.5C4.88071 2 6 3.11929 6 4.5V10C6 10.2761 5.77614 10.5 5.5 10.5C5.22386 10.5 5 10.2761 5 10V9.23611C4.46924 9.71115 3.76835 10 3 10C1.34315 10 0 8.65685 0 7C0 5.34315 1.34315 4 3 4C3.76835 4 4.46924 4.28885 5 4.76389V4.5C5 3.67157 4.32843 3 3.5 3H1.5C1.22386 3 1 2.77614 1 2.5ZM5 6.9986C4.99925 5.89468 4.1041 5 3 5C1.89543 5 1 5.89543 1 7C1 8.10457 1.89543 9 3 9C4.1041 9 4.99925 8.10532 5 7.0014V6.9986Z",
                            "M10.4999 5C10.7761 5 10.9999 5.22386 10.9999 5.5L10.9999 6H13.4999C13.7761 6 13.9999 6.22386 13.9999 6.5C13.9999 6.77614 13.7761 7 13.4999 7H10.9999L10.9999 9.54072C11.4471 9.5189 11.9455 9.52129 12.5001 9.54998L12.5 8.5C12.5 8.22386 12.7238 8 13 8C13.2761 8 13.5 8.22386 13.5 8.5L13.5001 9.68909L13.7861 9.75772C15.0833 9.9371 15.8873 11.1931 15.8845 12.423C15.883 13.063 15.6702 13.7257 15.1903 14.2847C14.7104 14.8437 13.988 15.2711 13.0117 15.4881C12.7421 15.548 12.4751 15.378 12.4152 15.1085C12.3552 14.8389 12.5252 14.5718 12.7948 14.5119C13.5998 14.333 14.1168 14 14.4315 13.6333C14.7464 13.2665 14.8835 12.8381 14.8845 12.4207C14.8865 11.5453 14.3171 10.8317 13.6327 10.7461L13.6051 10.7427L13.5438 10.728C13.5019 11.9983 12.7721 13.0506 11.8334 13.6409C11.5743 13.8039 11.2929 13.9349 10.9999 14.0264L11 15.5C11 15.7761 10.7761 16 10.5 16C10.2238 16 9.99995 15.7761 9.99995 15.5L9.99995 14.1749C9.34109 14.1637 8.6852 13.9292 8.14246 13.3954C7.80839 13.0668 7.59422 12.6316 7.5332 12.17C7.4885 11.832 7.5027 11.4503 7.65978 11.0775C7.8197 10.6979 8.11047 10.3689 8.54764 10.1162C8.9166 9.90294 9.39339 9.74173 9.99994 9.64216L9.99993 7H8.49993C8.22379 7 7.99993 6.77614 7.99993 6.5C7.99993 6.22386 8.22379 6 8.49993 6H9.99993L9.99993 5.5C9.99993 5.22386 10.2238 5 10.4999 5ZM9.99994 10.6578C9.57748 10.7399 9.26921 10.8542 9.0481 10.982C8.77791 11.1382 8.64743 11.3089 8.58132 11.4658C8.51236 11.6294 8.49575 11.821 8.52457 12.039C8.55679 12.2827 8.67063 12.5122 8.84371 12.6824C9.16767 13.0011 9.57226 13.1602 9.99995 13.1746L9.99994 10.6578ZM10.9999 12.9585C11.1018 12.9112 11.2024 12.8565 11.301 12.7944C12.0321 12.3346 12.5651 11.5191 12.5446 10.5539C11.9485 10.5201 11.4374 10.5188 10.9999 10.5422L10.9999 12.9585Z",
                            "M1.50001 16C1.22387 16 1.00001 15.7761 1.00001 15.5V12.5C1.00001 12.2239 1.22387 12 1.50001 12H4.50001C4.77615 12 5.00001 12.2239 5.00001 12.5C5.00001 12.7761 4.77615 13 4.50001 13H2.48942L2.50265 13.0159C2.86922 13.4537 3.30536 13.8726 3.69697 14.0404C4.11164 14.2181 4.75189 14.232 5.35716 14.1752C5.64683 14.1481 5.90599 14.1072 6.09273 14.0731C6.18581 14.056 6.26019 14.0408 6.31051 14.03C6.33566 14.0246 6.35476 14.0204 6.36713 14.0176L6.38054 14.0145L6.3833 14.0138C6.65177 13.9495 6.92178 14.1149 6.9862 14.3833C7.05064 14.6518 6.8852 14.9218 6.61668 14.9862L6.61204 14.9872C6.54866 15.0008 6.37409 15.0382 6.27265 15.0567C6.06514 15.0947 5.77621 15.1403 5.45049 15.1709C4.95036 15.2178 4.30051 15.236 3.72162 15.0964C3.57648 15.0614 3.43579 15.0165 3.30305 14.9596C2.81115 14.7488 2.35645 14.3427 2.00001 13.9581V15.5C2.00001 15.6404 1.94216 15.7672 1.84901 15.8581C1.75891 15.9459 1.63578 16 1.50001 16Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("material3"))
                    {
                        translateMenuItem.Icon = CreateMenuItemIcon("M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM15.88 17L17.5 12.67L19.12 17H15.88Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("fluent"))
                    {
                        translateMenuItem.Icon = CreateMenuItemIcon("M15 0.5C15 0.223858 14.7761 0 14.5 0C14.2239 0 14 0.223858 14 0.5V2.04189C13.6436 1.65727 13.1889 1.25124 12.697 1.04043C12.0348 0.756637 11.175 0.77048 10.5495 0.829118C10.2238 0.859652 9.93486 0.905306 9.72736 0.94326C9.62332 0.962289 9.53903 0.979516 9.47999 0.992168C9.45044 0.998497 9.42717 1.00369 9.41084 1.00741L9.39163 1.01184L9.38609 1.01315L9.38435 1.01356L9.38333 1.0138C9.38333 1.0138 9.38333 1.0138 9.5 1.5L9.38333 1.0138C9.11481 1.07824 8.94937 1.34816 9.0138 1.61667C9.07823 1.88514 9.34824 2.05053 9.61671 1.98619L9.61947 1.98554L9.63288 1.98245C9.64525 1.97963 9.66434 1.97536 9.68949 1.96997C9.73982 1.95919 9.81419 1.94397 9.90728 1.92694C10.094 1.89279 10.3532 1.85191 10.6428 1.82475C11.2481 1.76801 11.8884 1.78186 12.303 1.95957C12.6946 2.1274 13.1308 2.54633 13.4974 2.98415L13.5106 3H11.5C11.2239 3 11 3.22386 11 3.5C11 3.77614 11.2239 4 11.5 4H14.5C14.7761 4 15 3.77614 15 3.5V0.5ZM1.49995 2C1.2238 2 0.999946 2.22386 0.999946 2.5C0.999946 2.77614 1.2238 3 1.49995 3H3.49995C4.32837 3 4.99995 3.67157 4.99995 4.5V4.76384C4.4692 4.28883 3.76833 4 3 4C1.34315 4 0 5.34315 0 7C0 8.65685 1.34315 10 3 10C3.76833 10 4.4692 9.71117 4.99995 9.23616V10C4.99995 10.2761 5.2238 10.5 5.49995 10.5C5.77609 10.5 5.99995 10.2761 5.99995 10V7.01825L6 7L5.99995 6.98175V4.5C5.99995 3.11929 4.88066 2 3.49995 2H1.49995ZM3 5C4.0996 5 4.99194 5.88739 4.99995 6.9851V7.0149C4.99194 8.11261 4.0996 9 3 9C1.89543 9 1 8.10457 1 7C1 5.89543 1.89543 5 3 5ZM11 5.5C10.9999 5.22386 10.7761 5 10.4999 5C10.2238 5 9.99995 5.22386 9.99995 5.5L9.99995 6H8.49995C8.22381 6 7.99995 6.22386 7.99995 6.5C7.99995 6.77614 8.22381 7 8.49995 7H9.99995L9.99996 9.64214C9.08812 9.79176 8.44613 10.0847 8.03575 10.5109C7.54171 11.024 7.4636 11.6435 7.53321 12.17C7.59424 12.6316 7.80841 13.0668 8.14248 13.3954C8.6795 13.9236 9.33828 14.1618 9.99997 14.1748L9.99997 15.5C9.99997 15.7761 10.2238 16 10.5 16C10.7761 16 11 15.7761 11 15.5L11 14.0273C12.3245 13.6106 13.4922 12.3474 13.5442 10.7281L13.6052 10.7427L13.6327 10.7461C14.3171 10.8317 14.8865 11.5453 14.8845 12.4207C14.8836 12.8381 14.7464 13.2665 14.4316 13.6333C14.1168 14 13.5998 14.333 12.7948 14.5119C12.5252 14.5718 12.3553 14.8389 12.4152 15.1085C12.4751 15.378 12.7422 15.548 13.0117 15.4881C13.988 15.2711 14.7104 14.8437 15.1903 14.2847C15.6702 13.7257 15.883 13.063 15.8845 12.423C15.8873 11.1931 15.0833 9.9371 13.7861 9.75772L13.5001 9.68909L13.5 8.49996C13.5 8.22381 13.2761 7.99998 12.9999 8C12.7238 8.00002 12.5 8.2239 12.5 8.50004L12.5001 9.55C11.9425 9.52118 11.4444 9.51913 11 9.54079L11 7H13.5C13.7761 7 14 6.77614 14 6.5C14 6.22386 13.7761 6 13.5 6H11L11 5.5ZM8.75611 11.2045C8.94833 11.0049 9.31541 10.791 9.99996 10.6579L9.99997 13.1748C9.57517 13.1623 9.17331 13.0066 8.84373 12.6824C8.67065 12.5122 8.55681 12.2827 8.52459 12.039C8.48102 11.7095 8.53703 11.432 8.75611 11.2045ZM12.5444 10.5539C12.5666 11.6534 11.8675 12.5605 11 12.9589L11 10.5421C11.4406 10.5185 11.9521 10.5203 12.5444 10.5539Z",
                            "M1.5 12C1.22386 12 1 12.2239 1 12.5V15.5C1 15.7761 1.22386 16 1.5 16C1.77614 16 2 15.7761 2 15.5V13.9581C2.35644 14.3427 2.81114 14.7488 3.30304 14.9596C3.96522 15.2434 4.82496 15.2295 5.45048 15.1709C5.77621 15.1403 6.06514 15.0947 6.27264 15.0567C6.37668 15.0377 6.46097 15.0205 6.52001 15.0078C6.54956 15.0015 6.57283 14.9963 6.58916 14.9926L6.60837 14.9882L6.61391 14.9869L6.61565 14.9864L6.61667 14.9862C6.88519 14.9218 7.05063 14.6518 6.9862 14.3833C6.92177 14.1149 6.65176 13.9495 6.38329 14.0138L6.38053 14.0145L6.36712 14.0176C6.35475 14.0204 6.33566 14.0246 6.31051 14.03C6.26018 14.0408 6.18581 14.056 6.09272 14.0731C5.90598 14.1072 5.64682 14.1481 5.35715 14.1752C4.75189 14.232 4.11163 14.2181 3.69696 14.0404C3.30535 13.8726 2.86921 13.4537 2.50265 13.0159L2.48941 13H2.77806H4.5C4.77614 13 5 12.7761 5 12.5C5 12.2239 4.77614 12 4.5 12H1.5Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("material"))
                    {
                        translateMenuItem.Icon = CreateMenuItemIcon("M12.87 15.07L10.33 12.56L10.36 12.53C12.1 10.59 13.34 8.36 14.07 6H17V4H10V2H8V4H1V5.99H12.17C11.5 7.92 10.44 9.75 9 11.35C8.07 10.32 7.3 9.19 6.69 8H4.69C5.42 9.63 6.42 11.17 7.67 12.56L2.58 17.58L4 19L9 14L12.11 17.11L12.87 15.07ZM18.5 10H16.5L12 22H14L15.12 19H19.87L21 22H23L18.5 10ZM15.88 17L17.5 12.67L19.12 17H15.88Z");
                    }
                    else if (currentTheme.ThemeName.ToLower().Contains("office") || currentTheme.ThemeName.ToLower().Contains("system"))
                    {
                        translateMenuItem.Icon = CreateMenuItemIcon("M5.75781 13.4062C5.75781 13.8073 5.77083 14.2083 5.79688 14.6094C5.82812 15.0052 5.88021 15.401 5.95312 15.7969L4.79688 15.8359C4.77083 15.7214 4.75 15.6094 4.73438 15.5C4.71875 15.3854 4.71094 15.2682 4.71094 15.1484H4.64062C4.29688 15.4609 3.91146 15.6771 3.48438 15.7969C3.0625 15.9167 2.625 15.9766 2.17188 15.9766C1.85938 15.9766 1.57552 15.9297 1.32031 15.8359C1.0651 15.7422 0.846354 15.6094 0.664062 15.4375C0.486979 15.2604 0.348958 15.0469 0.25 14.7969C0.151042 14.5417 0.101562 14.2552 0.101562 13.9375C0.101562 13.4792 0.179688 13.0859 0.335938 12.7578C0.492188 12.4245 0.705729 12.151 0.976562 11.9375C1.2474 11.7188 1.5651 11.5599 1.92969 11.4609C2.29948 11.3568 2.69531 11.3047 3.11719 11.3047C3.44531 11.3047 3.77344 11.3359 4.10156 11.3984C4.16927 11.4089 4.25521 11.4323 4.35938 11.4688C4.46875 11.5 4.55469 11.5156 4.61719 11.5156C4.64323 11.5156 4.65885 11.5104 4.66406 11.5C4.66927 11.4844 4.67188 11.4635 4.67188 11.4375C4.67188 11.3802 4.66667 11.3255 4.65625 11.2734C4.64583 11.2214 4.64062 11.1667 4.64062 11.1094C4.64062 10.7812 4.59115 10.5182 4.49219 10.3203C4.39844 10.1224 4.26562 9.97135 4.09375 9.86719C3.92188 9.75781 3.71615 9.6875 3.47656 9.65625C3.23698 9.61979 2.97656 9.60156 2.69531 9.60156C2.53906 9.60156 2.40104 9.61458 2.28125 9.64062C2.16667 9.66146 2.05469 9.6901 1.94531 9.72656C1.84115 9.75781 1.73438 9.79427 1.625 9.83594C1.51562 9.8724 1.38802 9.90885 1.24219 9.94531L1.05469 8.92969C1.23698 8.8776 1.40885 8.82812 1.57031 8.78125C1.73177 8.73438 1.89062 8.69531 2.04688 8.66406C2.20833 8.6276 2.3724 8.60156 2.53906 8.58594C2.71094 8.5651 2.89323 8.55469 3.08594 8.55469C3.5026 8.55469 3.8776 8.59375 4.21094 8.67188C4.54948 8.75 4.83854 8.88281 5.07812 9.07031C5.31771 9.2526 5.5 9.4974 5.625 9.80469C5.75521 10.1068 5.82031 10.4844 5.82031 10.9375C5.82031 11.349 5.8099 11.7604 5.78906 12.1719C5.76823 12.5833 5.75781 12.9948 5.75781 13.4062ZM2.71875 14.9688C3.06771 14.9688 3.40885 14.9245 3.74219 14.8359C4.07552 14.7474 4.38021 14.5885 4.65625 14.3594C4.64062 14.0208 4.63021 13.6875 4.625 13.3594C4.61979 13.026 4.61719 12.6901 4.61719 12.3516C4.4349 12.2943 4.2474 12.2526 4.05469 12.2266C3.86198 12.1953 3.66927 12.1797 3.47656 12.1797C3.23698 12.1797 2.98698 12.2083 2.72656 12.2656C2.47135 12.3229 2.23698 12.4141 2.02344 12.5391C1.8151 12.6641 1.64323 12.8255 1.50781 13.0234C1.3724 13.2214 1.30469 13.4635 1.30469 13.75C1.30469 13.9688 1.34115 14.1562 1.41406 14.3125C1.48698 14.4635 1.58594 14.5885 1.71094 14.6875C1.83594 14.7812 1.98438 14.8516 2.15625 14.8984C2.32812 14.9453 2.51562 14.9688 2.71875 14.9688ZM1.75 2.75C2.14062 2.47917 2.5625 2.27865 3.01562 2.14844C3.47396 2.01823 3.9401 1.95312 4.41406 1.95312C4.63802 1.95312 4.86719 1.96875 5.10156 2C5.33594 2.02604 5.56771 2.07031 5.79688 2.13281C6.02604 2.1901 6.2474 2.26562 6.46094 2.35938C6.67969 2.44792 6.88281 2.55469 7.07031 2.67969C6.7474 2.70573 6.41667 2.77083 6.07812 2.875C5.74479 2.97917 5.42188 3.11719 5.10938 3.28906C4.80208 3.46094 4.51562 3.66406 4.25 3.89844C3.98958 4.1276 3.77344 4.38021 3.60156 4.65625L5.92188 6.98438H0V1L1.75 2.75ZM10.0781 10.0156H16V16L14.25 14.2578C13.8594 14.5286 13.4349 14.7292 12.9766 14.8594C12.5234 14.9844 12.0599 15.0469 11.5859 15.0469C11.362 15.0469 11.1328 15.0339 10.8984 15.0078C10.6693 14.9766 10.4401 14.9323 10.2109 14.875C9.98177 14.8125 9.75781 14.737 9.53906 14.6484C9.32031 14.5547 9.11719 14.4453 8.92969 14.3203C9.2474 14.2995 9.57552 14.237 9.91406 14.1328C10.2526 14.0234 10.5755 13.8828 10.8828 13.7109C11.1953 13.5391 11.4818 13.3385 11.7422 13.1094C12.0078 12.875 12.2266 12.6198 12.3984 12.3438L10.0781 10.0156ZM11.2656 7.75781C11.1302 7.89844 10.987 8.03385 10.8359 8.16406C10.6901 8.29427 10.5339 8.41146 10.3672 8.51562C10.2005 8.61458 10.0234 8.69531 9.83594 8.75781C9.65365 8.8151 9.46094 8.84375 9.25781 8.84375C8.83594 8.84375 8.52604 8.71615 8.32812 8.46094C8.13021 8.20573 8.03125 7.875 8.03125 7.46875C8.03125 7.11979 8.09115 6.79948 8.21094 6.50781C8.33594 6.21615 8.5 5.95312 8.70312 5.71875C8.90625 5.47917 9.14062 5.26562 9.40625 5.07812C9.67708 4.88542 9.95833 4.71354 10.25 4.5625C10.2448 4.47396 10.2396 4.38802 10.2344 4.30469C10.2344 4.22135 10.2344 4.13542 10.2344 4.04688C10.2344 3.80208 10.2396 3.5599 10.25 3.32031C10.2656 3.08073 10.2865 2.84115 10.3125 2.60156C10.25 2.60677 10.1849 2.60938 10.1172 2.60938C10.0547 2.60938 9.99219 2.60938 9.92969 2.60938H9.64844C9.50781 2.60938 9.38281 2.60677 9.27344 2.60156C9.16406 2.59115 9.0599 2.56771 8.96094 2.53125C8.86198 2.48958 8.76562 2.42969 8.67188 2.35156C8.57812 2.27344 8.47396 2.16667 8.35938 2.03125C8.3125 1.97396 8.26042 1.91406 8.20312 1.85156C8.14583 1.78385 8.11719 1.71354 8.11719 1.64062C8.11719 1.54167 8.15365 1.47135 8.22656 1.42969C8.29948 1.38802 8.38021 1.36719 8.46875 1.36719C8.58333 1.36719 8.67448 1.38802 8.74219 1.42969C8.8151 1.47135 8.875 1.51823 8.92188 1.57031C8.97396 1.6224 9.02083 1.67188 9.0625 1.71875C9.10417 1.76562 9.15365 1.79688 9.21094 1.8125C9.28385 1.83333 9.36458 1.84635 9.45312 1.85156C9.54167 1.85156 9.6276 1.85156 9.71094 1.85156H9.875C10.0469 1.85156 10.2188 1.84375 10.3906 1.82812C10.4115 1.65625 10.4349 1.48698 10.4609 1.32031C10.487 1.14844 10.513 0.976562 10.5391 0.804688C10.513 0.731771 10.4688 0.677083 10.4062 0.640625C10.3438 0.604167 10.2786 0.572917 10.2109 0.546875C10.1484 0.515625 10.0911 0.481771 10.0391 0.445312C9.99219 0.408854 9.96875 0.354167 9.96875 0.28125C9.96875 0.177083 10.0078 0.111979 10.0859 0.0859375C10.1693 0.0546875 10.25 0.0390625 10.3281 0.0390625C10.3854 0.0390625 10.4531 0.0520833 10.5312 0.078125C10.6094 0.0989583 10.6771 0.114583 10.7344 0.125C10.7969 0.140625 10.888 0.164062 11.0078 0.195312C11.1328 0.221354 11.2578 0.257812 11.3828 0.304688C11.5078 0.351562 11.6172 0.408854 11.7109 0.476562C11.8047 0.539062 11.8516 0.611979 11.8516 0.695312C11.8516 0.705729 11.8385 0.755208 11.8125 0.84375C11.7865 0.927083 11.7578 1.02083 11.7266 1.125C11.6953 1.22396 11.6641 1.32031 11.6328 1.41406C11.6068 1.5026 11.5911 1.5599 11.5859 1.58594C11.8776 1.48698 12.1484 1.34375 12.3984 1.15625C12.5182 1.06771 12.651 0.984375 12.7969 0.90625C12.9479 0.822917 13.1016 0.78125 13.2578 0.78125C13.3932 0.78125 13.5078 0.820312 13.6016 0.898438C13.6953 0.976562 13.7422 1.08594 13.7422 1.22656C13.7422 1.3776 13.6979 1.51302 13.6094 1.63281C13.526 1.7474 13.4141 1.84896 13.2734 1.9375C13.138 2.02083 12.9818 2.09375 12.8047 2.15625C12.6328 2.21875 12.4583 2.27344 12.2812 2.32031C12.1042 2.36198 11.9349 2.39583 11.7734 2.42188C11.612 2.44792 11.4766 2.47135 11.3672 2.49219C11.3099 2.76823 11.263 3.04688 11.2266 3.32812C11.1953 3.60417 11.1745 3.88281 11.1641 4.16406C11.3411 4.10156 11.5208 4.04688 11.7031 4C11.8854 3.94792 12.0703 3.90885 12.2578 3.88281C12.2109 3.84115 12.1432 3.79688 12.0547 3.75C11.9661 3.69792 11.875 3.64583 11.7812 3.59375C11.6927 3.53646 11.6146 3.47917 11.5469 3.42188C11.4844 3.36458 11.4531 3.30469 11.4531 3.24219C11.4531 3.13802 11.4896 3.07292 11.5625 3.04688C11.6354 3.01562 11.7161 3 11.8047 3C11.9401 3 12.1042 3.01042 12.2969 3.03125C12.4896 3.04688 12.6745 3.08333 12.8516 3.14062C13.0286 3.19792 13.1797 3.28385 13.3047 3.39844C13.4297 3.50781 13.4922 3.65625 13.4922 3.84375C13.8464 3.88021 14.1745 3.95833 14.4766 4.07812C14.7839 4.19271 15.0469 4.35156 15.2656 4.55469C15.4896 4.75781 15.6641 5.0026 15.7891 5.28906C15.9141 5.57552 15.9766 5.90625 15.9766 6.28125C15.9766 6.36979 15.9635 6.47656 15.9375 6.60156C15.9115 6.72135 15.8854 6.82552 15.8594 6.91406C15.776 7.17969 15.6536 7.42708 15.4922 7.65625C15.3359 7.88021 15.1536 8.08594 14.9453 8.27344C14.7422 8.46094 14.5182 8.63021 14.2734 8.78125C14.0339 8.92708 13.7917 9.05729 13.5469 9.17188C13.4271 9.22917 13.2943 9.28906 13.1484 9.35156C13.0026 9.41406 12.862 9.45833 12.7266 9.48438L12.6719 9.49219C12.5885 9.48177 12.5 9.44792 12.4062 9.39062C12.3177 9.32812 12.2734 9.25 12.2734 9.15625C12.2734 9.05729 12.3151 8.98958 12.3984 8.95312C12.4818 8.91667 12.5599 8.89062 12.6328 8.875C12.6536 8.86979 12.6927 8.85677 12.75 8.83594C12.8073 8.8099 12.8672 8.78125 12.9297 8.75C12.9974 8.71875 13.0599 8.6875 13.1172 8.65625C13.1745 8.625 13.2135 8.60417 13.2344 8.59375C13.4323 8.48958 13.638 8.36719 13.8516 8.22656C14.0703 8.08073 14.2708 7.91927 14.4531 7.74219C14.6354 7.5599 14.7865 7.36198 14.9062 7.14844C15.026 6.92969 15.0859 6.69531 15.0859 6.44531C15.0859 6.41406 15.0833 6.38281 15.0781 6.35156C15.0781 6.3151 15.0755 6.28125 15.0703 6.25C14.9245 5.18229 14.3151 4.60938 13.2422 4.53125C13.0495 4.97917 12.8385 5.41927 12.6094 5.85156C12.3802 6.27865 12.1224 6.6875 11.8359 7.07812C11.9141 7.19271 11.9948 7.29948 12.0781 7.39844C12.1615 7.49219 12.25 7.59115 12.3438 7.69531C12.3906 7.74219 12.4141 7.79167 12.4141 7.84375C12.4141 7.89062 12.3984 7.9349 12.3672 7.97656C12.3359 8.01823 12.2969 8.05469 12.25 8.08594C12.2083 8.11719 12.1615 8.14323 12.1094 8.16406C12.0625 8.17969 12.0182 8.1875 11.9766 8.1875C11.9141 8.1875 11.849 8.17448 11.7812 8.14844C11.7135 8.1224 11.6458 8.08854 11.5781 8.04688C11.5104 8.00521 11.4479 7.95833 11.3906 7.90625C11.3385 7.85417 11.2969 7.80469 11.2656 7.75781ZM12.2266 4.59375C11.8672 4.65625 11.5156 4.75 11.1719 4.875C11.1875 5.08333 11.2109 5.29167 11.2422 5.5C11.2786 5.70312 11.3281 5.90365 11.3906 6.10156C11.4583 5.99219 11.5312 5.875 11.6094 5.75C11.6927 5.625 11.7708 5.4974 11.8438 5.36719C11.9219 5.23698 11.9948 5.10677 12.0625 4.97656C12.1302 4.84635 12.1849 4.71875 12.2266 4.59375ZM8.91406 7.64062C8.91406 7.77604 8.96094 7.89583 9.05469 8C9.15365 8.09896 9.27083 8.14844 9.40625 8.14844C9.52083 8.14844 9.64323 8.10417 9.77344 8.01562C9.90885 7.92708 10.0391 7.82031 10.1641 7.69531C10.2891 7.57031 10.4036 7.44271 10.5078 7.3125C10.612 7.18229 10.6953 7.07552 10.7578 6.99219C10.6328 6.72656 10.5365 6.45312 10.4688 6.17188C10.401 5.88542 10.349 5.59635 10.3125 5.30469C10.1354 5.42969 9.96354 5.58073 9.79688 5.75781C9.63021 5.92969 9.48177 6.11979 9.35156 6.32812C9.22135 6.53125 9.11458 6.74479 9.03125 6.96875C8.95312 7.19271 8.91406 7.41667 8.91406 7.64062Z");
                    }
                    richTextBoxAdv.ContextMenu.Items.Add(translateMenuItem);
                }
            }
        }

        /// <summary>
        /// Creates menu item icons for AI options.
        /// </summary>
        /// <param name="pathData">The pathData</param>
        /// <returns>Icons of the menu items.</returns>
        private Grid CreateMenuItemIcon(params string[] pathData)
        {
            Grid grid = new Grid
            {
                Width = 14,
                Height = 18,
                HorizontalAlignment = HorizontalAlignment.Center,
                VerticalAlignment = VerticalAlignment.Center
            };
            GeometryGroup geometryGroup = new GeometryGroup();
            foreach (string path in pathData)
            {
                geometryGroup.Children.Add(Geometry.Parse(path));
            }
            System.Windows.Shapes.Path iconPath = new System.Windows.Shapes.Path
            {
                Data = geometryGroup,
                Stretch = Stretch.Uniform,
            };
            if (currentTheme.ThemeName.ToLower().Contains("system")) { iconPath.Fill = Brushes.Black; }
            else { iconPath.SetResourceReference(System.Windows.Shapes.Path.FillProperty, "IconColor"); }
            grid.Children.Add(iconPath);
            return grid;
        }

        /// <summary>
        /// Removes the custom context menu items (Rewrite, Grammar, and Translate) from the SfRichTextBoxAdv context menu
        /// when the context menu is closing.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">Event data for the ContextMenuEventArgs.</param>
        private void RichTextBoxAdv_ContextMenuClosing(object sender, ContextMenuEventArgs e)
        {
            // Remove custom items first if they are already added
            richTextBoxAdv.ContextMenu.Items.Remove(rewriteMenuItem);
            rewriteMenuItem = null;
            richTextBoxAdv.ContextMenu.Items.Remove(grammarMenuItem);
            grammarMenuItem = null;
            richTextBoxAdv.ContextMenu.Items.Remove(translateMenuItem);
            translateMenuItem = null;
        }

        /// <summary>
        /// Handles the click event for the "Rewrite" context menu item.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">Event data for the RoutedEventArgs.</param>
        private void RewriteMenuItem_Click(object sender, RoutedEventArgs e)
        {
            HandleMenuItemClick(new ReWriteDemo(this, SfSkinManager.GetTheme(this)), richTextBoxAdv.Selection.Text);
        }

        /// <summary>
        /// Handles the click event for the "Grammar" context menu item.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">Event data for the RoutedEventArgs.</param>
        private void GrammarMenuItem_Click(object sender, RoutedEventArgs e)
        {
            HandleMenuItemClick(new GrammarDemo(this, SfSkinManager.GetTheme(this)), richTextBoxAdv.Selection.Text);
        }

        /// <summary>
        /// Handles the click event for the "Translate" context menu item.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">Event data for the RoutedEventArgs.</param>
        private void TranslateMenuItem_Click(object sender, RoutedEventArgs e)
        {
            HandleMenuItemClick(new TranslateDemo(this, SfSkinManager.GetTheme(this)), richTextBoxAdv.Selection.Text);
        }

        /// <summary>
        /// Handles the processing of the selected text by passing it to a dynamic demo instance,
        /// then pastes the generated content into the SfRichTextBoxAdv if a result is returned.
        /// </summary>
        /// <param name="demo">The dynamic demo instance used to process the selected text.</param>
        /// <param name="selectedText">The selected text from the SfRichTextBoxAdv to be processed.</param>
        private void HandleMenuItemClick(dynamic demo, string selectedText)
        {
            if (demo != null && SfSkinManager.GetTheme(this) != null)
            {
                demo.semanticKernelOpenAI = semanticKernelOpenAI;
            }

            if (!string.IsNullOrWhiteSpace(selectedText))
            {
                demo.SetRichTextContent(selectedText);
            }

            if (demo.ShowDialog() == true)
            {
                string contentToPaste = demo.GeneratedContent;

                if (!string.IsNullOrWhiteSpace(contentToPaste) && richTextBoxAdv != null)
                {
                    // Use Clipboard to paste content into SfRichTextBoxAdv
                    DataObject dataObject = new DataObject();
                    dataObject.SetData(DataFormats.Html, contentToPaste);
                    Clipboard.SetDataObject(dataObject);

                    // Execute the paste command on the SfRichTextBoxAdv
                    SfRichTextBoxAdv.PasteCommand.Execute(null, richTextBoxAdv);
                }
            }
        }

        /// <summary>
        /// Handles the Loaded event for the SfRichTextBoxAdv.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">Event data for the RoutedEventArgs.</param>
        private void richTextBoxAdv_Loaded(object sender, RoutedEventArgs e)
        {
            // Ensure AI Creadentials are valid
            if (!AISettings.IsCredentialValid)
            {
                AISettings.ShowAISettingsWindow();
            }

            // Proceed only if credentials are valid
            if (AISettings.IsCredentialValid)
            {
                IsCredentialValid = AISettings.IsCredentialValid;
                semanticKernelOpenAI = new SemanticKernelAI(AISettings.Key, AISettings.EndPoint, AISettings.ModelName);
            }
            else
            {
                semanticKernelOpenAI = null;
            }
        }
        #endregion

        #region Events
        /// <summary>
        /// Called when [loaded].
        /// </summary>
        /// <param name="sender">The sender.</param>
        /// <param name="e">The <see cref="RoutedEventArgs"/> instance containing the event data.</param>
        private void OnLoaded(object sender, RoutedEventArgs e)
        {
            if (richTextBoxAdv != null)
            {
                richTextBoxAdv.Selection.Select(richTextBoxAdv.Document.DocumentStart, richTextBoxAdv.Document.DocumentStart);
                richTextBoxAdv.Focus();
            }
            WindowTitleBarButton HelpButton = null;
            Syncfusion.Windows.Tools.Controls.TitleBar titleBar = VisualUtils.FindDescendant(sender as RibbonWindow, typeof(Syncfusion.Windows.Tools.Controls.TitleBar)) as Syncfusion.Windows.Tools.Controls.TitleBar;
            if (titleBar != null)
                HelpButton = titleBar.Template.FindName("HelpButton", titleBar) as WindowTitleBarButton;
            if (HelpButton != null)
            {
                HelpButton.Click += HelpButton_Click;
                HelpButton.ToolTip = "Help";
            }
        }
        /// <summary>
        /// Handles the RequestNavigate event of the richTextBoxAdv control.
        /// </summary>
        /// <param name="obj">The source of the event.</param>
        /// <param name="args">The <see cref="Syncfusion.Windows.Controls.RichTextBoxAdv.RequestNavigateEventArgs"/> instance containing the event data.</param>
        void RichTextBoxAdv_RequestNavigate(object obj, Syncfusion.Windows.Controls.RichTextBoxAdv.RequestNavigateEventArgs args)
        {
            if (args.Hyperlink.LinkType == Syncfusion.Windows.Controls.RichTextBoxAdv.HyperlinkType.Webpage || args.Hyperlink.LinkType == Syncfusion.Windows.Controls.RichTextBoxAdv.HyperlinkType.Email)
                LaunchUri(new Uri(args.Hyperlink.NavigationLink).AbsoluteUri);
            else if (args.Hyperlink.LinkType == HyperlinkType.File && File.Exists(args.Hyperlink.NavigationLink))
                LaunchUri(args.Hyperlink.NavigationLink);
        }
        /// <summary>
        /// Called on RichTextBoxAdv selection changes.
        /// </summary>
        /// <param name="obj"></param>
        /// <param name="args">An <see cref="T:Syncfusion.Windows.Controls.RichTextBoxAdv.SelectionChangedEventArgs">SelectionChangedEventArgs</see> that contains the event data.</param>
        /// <remarks></remarks>
        private void RichTextBoxAdv_SelectionChanged(object obj, Syncfusion.Windows.Controls.RichTextBoxAdv.SelectionChangedEventArgs args)
        {
            pagecountRun.RunText = richTextBoxAdv.PageCount.ToString();
            currentPageNumberRun.RunText = richTextBoxAdv.CurrentPageNumber.ToString();
        }

        #endregion

        #region Dispose
        /// <summary>
        /// Raises the Closing event.
        /// </summary>
        /// <param name="e">CancelEventArgs that contains the event dat</param>
        protected override void OnClosing(CancelEventArgs e)
        {
            this.Loaded -= OnLoaded;
            if (richTextRibbon != null)
            {
                richTextRibbon.Dispose();
                richTextRibbon = null;
            }
            if (richTextBoxAdv != null)
            {
                richTextBoxAdv.SelectionChanged -= RichTextBoxAdv_SelectionChanged;
                richTextBoxAdv.RequestNavigate -= RichTextBoxAdv_RequestNavigate;
                richTextBoxAdv.ContextMenuOpening -= RichTextBoxAdv_ContextMenuOpening;
                richTextBoxAdv.ContextMenuClosing -= RichTextBoxAdv_ContextMenuClosing;
                richTextBoxAdv.Dispose();
                richTextBoxAdv = null;
            }
            WindowTitleBarButton HelpButton = null;
            Syncfusion.Windows.Tools.Controls.TitleBar titleBar = VisualUtils.FindDescendant(this as RibbonWindow, typeof(Syncfusion.Windows.Tools.Controls.TitleBar)) as Syncfusion.Windows.Tools.Controls.TitleBar;
            if (titleBar != null)
                HelpButton = titleBar.Template.FindName("HelpButton", titleBar) as WindowTitleBarButton;
            if (HelpButton != null)
                HelpButton.Click -= HelpButton_Click;

            base.OnClosing(e);
        }
        #endregion
    }
}
